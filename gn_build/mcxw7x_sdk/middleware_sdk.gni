# Copyright (c) 2024 Project CHIP Authors
# Copyright 2024-2025 NXP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/nxp_sdk.gni")

import("${chip_root}/src/crypto/crypto.gni")
import("${chip_root}/src/platform/device.gni")
import("${chip_root}/src/platform/nxp/${nxp_platform}/args.gni")

import("${nxp_sdk_build_root}/nxp_sdk.gni")

assert(nxp_sdk_root != "", "nxp_sdk_root must be specified")

middleware_sdk = {
  BLE_CONTROLLER_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/ble_controller"
  BLE_HOST_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/bluetooth"
  FRAMEWORK_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/framework"
  FRAMEWORK_SERVICES_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/framework/services"
  FRAMEWORK_ZEPHYR_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/framework/zephyr"
  FREERTOS_DIR_PATH = "${nxp_sdk_root}/rtos/freertos"
  FRAMEWORK_PLATFORM_DIR_PATH = "${FRAMEWORK_DIR_PATH}/platform/wireless_mcu"
  FREERTOS_KERNEL_DIR_PATH = "${FREERTOS_DIR_PATH}/freertos-kernel"
  IEEE_802_15_4_DIR_PATH = "${nxp_sdk_root}/middleware/wireless/ieee-802.15.4"
  MBEDTLS_DIR_PATH = "${nxp_sdk_root}/middleware/mbedtls"
  MULTICORE_DIR_PATH = "${nxp_sdk_root}/middleware/multicore"
  MULTICORE_RPMSG_DIR_PATH = "${nxp_sdk_root}/middleware/multicore/rpmsg-lite"
  SECURE_SUBSYSTEM_DIR_PATH = "${nxp_sdk_root}/middleware/secure-subsystem"
  LITTLEFS_DIR_PATH = "${nxp_sdk_root}/middleware/littlefs"

  middleware_include_dirs = [
    # BLE HOST / BLE CONTROLLER directories
    "${BLE_CONTROLLER_DIR_PATH}/interface",
    "${BLE_HOST_DIR_PATH}/application/common",
    "${BLE_HOST_DIR_PATH}/application/common/gatt_db",
    "${BLE_HOST_DIR_PATH}/application/common/gatt_db/macros",
    "${BLE_HOST_DIR_PATH}/application/common/matter",
    "${BLE_HOST_DIR_PATH}/hci_transport/interface",
    "${BLE_HOST_DIR_PATH}/host/config",
    "${BLE_HOST_DIR_PATH}/host/interface",
    "${BLE_HOST_DIR_PATH}/port",
    
    # Framework directories
    "${FRAMEWORK_DIR_PATH}/Common",
    "${FRAMEWORK_SERVICES_DIR_PATH}/DBG",
    "${FRAMEWORK_SERVICES_DIR_PATH}/FunctionLib",
    "${FRAMEWORK_SERVICES_DIR_PATH}/HWParameter",
    "${FRAMEWORK_SERVICES_DIR_PATH}/LowPower",
    "${FRAMEWORK_SERVICES_DIR_PATH}/ModuleInfo",
    "${FRAMEWORK_SERVICES_DIR_PATH}/OtaSupport/Interface",
    "${FRAMEWORK_SERVICES_DIR_PATH}/OtaSupport/Source",
    "${FRAMEWORK_SERVICES_DIR_PATH}/SecLib_RNG",
    "${FRAMEWORK_SERVICES_DIR_PATH}/Sensors",
    "${FRAMEWORK_SERVICES_DIR_PATH}/WorkQ",
    "${FRAMEWORK_PLATFORM_DIR_PATH}",
    # Note: fwk_platform_ot.h is the one from wireless_mcu, not the one from
    # platform/include, so include the latter one after.
    "${FRAMEWORK_DIR_PATH}/platform/include",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/configs",

    # Freertos directories
    "${FREERTOS_DIR_PATH}/libraries/3rdparty/mbedtls_config",
    "${FREERTOS_KERNEL_DIR_PATH}/include",
    "${FREERTOS_KERNEL_DIR_PATH}/portable/GCC/ARM_CM33_NTZ/non_secure",

    # IEEE 802.15.4 directories
    "${IEEE_802_15_4_DIR_PATH}/ieee_802_15_4/phy/interface",
    "${IEEE_802_15_4_DIR_PATH}/utils",

    # Mbedtls directories
    "${MBEDTLS_DIR_PATH}/include",
    "${MBEDTLS_DIR_PATH}/include/mbedtls",
    "${MBEDTLS_DIR_PATH}/library",
    "${MBEDTLS_DIR_PATH}/port/sssapi",

    # Multicore / Rpmsg directories
    "${MULTICORE_DIR_PATH}/mcmgr/src",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/include",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/include/environment/freertos",

    # Secure subsystem directories
    "${SECURE_SUBSYSTEM_DIR_PATH}/inc",
    "${SECURE_SUBSYSTEM_DIR_PATH}/inc/elemu",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1",
  ]

  if (nxp_device == "MCXW716C") {
    middleware_include_dirs += [
      "${MULTICORE_RPMSG_DIR_PATH}/lib/include/platform/mcxw71x",
      "${FRAMEWORK_PLATFORM_DIR_PATH}/../kw45_k32w1_mcxw71",
      "${FRAMEWORK_PLATFORM_DIR_PATH}/../kw45_k32w1_mcxw71/configs",
    ]
  } else if (nxp_device == "MCXW727C") {
    middleware_include_dirs += [
      "${MULTICORE_RPMSG_DIR_PATH}/lib/include/platform/mcxw72x",
      "${FRAMEWORK_PLATFORM_DIR_PATH}/../kw47_mcxw72",
      "${FRAMEWORK_PLATFORM_DIR_PATH}/../kw47_mcxw72/configs",
      "${nxp_sdk_root}/boards/mcxw72evk/wireless_examples/bluetooth/w_uart/freertos/"
    ]
  }

  if (nxp_nvm_component == "fwk_nvm") {
    middleware_include_dirs += [
      "${FRAMEWORK_SERVICES_DIR_PATH}/NVM/Source",
      "${FRAMEWORK_SERVICES_DIR_PATH}/NVM/Interface"
    ]
  } else if (nxp_nvm_component == "littlefs") {
    middleware_include_dirs += [
      "${LITTLEFS_DIR_PATH}",
      "${FRAMEWORK_SERVICES_DIR_PATH}/FSAbstraction",
      "${FRAMEWORK_SERVICES_DIR_PATH}/FileCache",
      "${FRAMEWORK_SERVICES_DIR_PATH}/KeyStorage"
    ]
  } else if (nxp_nvm_component == "nvs") {
    middleware_include_dirs += [
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/include",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/include/zephyr/fs",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/include/zephyr/settings",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/include/zephyr/sys",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/common",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/nvs",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/settings",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/fs/nvs",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/include",
    ]
  }

  if(nxp_multiple_ble_connections) {
    middleware_defines = [ "gAppMaxConnections_c=3" ]
  }
  else {
    middleware_defines = [ "gAppMaxConnections_c=1" ]
  }

  middleware_defines += [
    "gMainThreadPriority_c=5",
    "SDK_COMPONENT_INTEGRATION=1",
    "gSerialManagerMaxInterfaces_c=1",
    "gAppHighSystemClockFrequency_d=1",
    "USE_NBU=1",
    "gAspCapability_d=1",
    "gNvStorageIncluded_d=1",
    "gUnmirroredFeatureSet_d=1",
    "gNvFragmentation_Enabled_d=1",
    "gAppButtonCnt_c=2",
    "gAppLowpowerEnabled_d=1",
    "SSS_CONFIG_FILE=\"fsl_sss_config_elemu.h\"",
    "SSCP_CONFIG_FILE=\"fsl_sscp_config_elemu.h\"",
    "gUseHciTransportDownward_d=1",
    "gL2caMaxLeCbChannels_c=2",
    "gGapSimultaneousEAChainedReports_c=0",
    "gTmrStackTimers_c= 3 + gAppMaxConnections_c * 2 + gL2caMaxLeCbChannels_c + gGapSimultaneousEAChainedReports_c",
    "gAppUseBonding_d=0",
    "gAppUsePairing_d=0",
    "gAppUsePrivacy_d=0",
    "gGattUseUpdateDatabaseCopyProc_c=0",
    "gBleBondIdentityHeaderSize_c=56",
    "gPasskeyValue_c=999999",
    "gMainThreadStackSize_c=3096",
    "gHost_TaskStackSize_c=2400",
    "gBleSetMacAddrFromVendorCommand_d=1",
    "mAdvertisingDefaultTxPower_c=0", # default advertising TX power
    "mConnectionDefaultTxPower_c=0",  # default connection TX power
    "BLE_HIGH_TX_POWER=0",            # when enabled overwrite default tx power with following values gAdvertisingPowerLeveldBm_c and gConnectPowerLeveldBm_c
    "gAdvertisingPowerLeveldBm_c=0",
    "gConnectPowerLeveldBm_c=0",
    "MULTICORE_APP=1",
  ]

  if (nxp_device == "MCXW727C") {
    middleware_defines += [
      # Needed by sss_init
      "MBEDTLS_NXP_SSSAPI",
      "MBEDTLS_THREADING_C",
      "MBEDTLS_THREADING_ALT",
    ]
  } else {
    middleware_defines += [
      "KW45_A0_SUPPORT=0",
      "APP_SERIAL_INTERFACE_INSTANCE=1",
      # Not sure if these flags are actually used or needed
      "osCustomStartup=1",
      "CHIP_ENABLE_OPENTHREAD=1",
    ]
  }

  if (nxp_nvm_component == "littlefs") {
    middleware_defines += [
      "LFS_THREADSAFE",
      "LFS_NO_DEBUG",
      "LFS_NO_ERROR",
      "LFS_NO_WARN"
    ]
  } else if (nxp_nvm_component == "nvs") {
    middleware_defines += [
      "gAppNvsExternalFlash_c=0",
      "gAppNvsInternalFlash_c=1",
      "CONFIG_NVS_LOOKUP_CACHE=1",
      "CONFIG_NVS_LOOKUP_CACHE_SIZE=1024",
      "CONFIG_SETTINGS_DYNAMIC_HANDLERS=1",
      "CONFIG_SETTINGS_RUNTIME=1",
      "CONFIG_NVS_STATS=1"
    ]
  }

  middleware_sources = [
    # Framework files
    "${FRAMEWORK_DIR_PATH}/Common/rtos/freertos/heap_mem_manager.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/FunctionLib/FunctionLib.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/HWParameter/HWParameter.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/LowPower/PWR.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/LowPower/PWR_systicks.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/OtaSupport/Source/OtaExternalFlash.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/OtaSupport/Source/OtaSupport.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/SecLib_RNG/RNG.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/Sensors/sensors.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/WorkQ/fwk_workq.c",
    "${FRAMEWORK_SERVICES_DIR_PATH}/WorkQ/fwk_sysworkq.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_ble.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_crypto.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_extflash.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_ics.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_lowpower.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_lowpower_timer.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_ota.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_ot.c",
    "${FRAMEWORK_PLATFORM_DIR_PATH}/fwk_platform_rng.c",

    # BLE HOST / BLE CONTROLLER files
    "${BLE_CONTROLLER_DIR_PATH}/src/controller_api.c",
    "${BLE_HOST_DIR_PATH}/application/common/ble_conn_manager.c",
    "${BLE_HOST_DIR_PATH}/application/common/ble_host_tasks.c",

    "${BLE_HOST_DIR_PATH}/application/common/gatt_db/gatt_database.c",
    "${BLE_HOST_DIR_PATH}/hci_transport/source/hcit_generic_adapter_interface.c",
    "${BLE_HOST_DIR_PATH}/host/config/ble_globals.c",
    "${BLE_HOST_DIR_PATH}/port/fwk_generic_list.c",
    "${BLE_HOST_DIR_PATH}/port/fwk_timer_manager.c",

    # Freertos files
    "${FREERTOS_KERNEL_DIR_PATH}/croutine.c",
    "${FREERTOS_KERNEL_DIR_PATH}/event_groups.c",
    "${FREERTOS_KERNEL_DIR_PATH}/list.c",
    "${FREERTOS_KERNEL_DIR_PATH}/portable/GCC/ARM_CM33_NTZ/non_secure/portasm.c",
    "${FREERTOS_KERNEL_DIR_PATH}/portable/GCC/ARM_CM33_NTZ/non_secure/port.c",
    "${FREERTOS_KERNEL_DIR_PATH}/queue.c",
    "${FREERTOS_KERNEL_DIR_PATH}/stream_buffer.c",
    "${FREERTOS_KERNEL_DIR_PATH}/tasks.c",
    "${FREERTOS_KERNEL_DIR_PATH}/timers.c",

    # IEEE 802.15.4 files
    "${IEEE_802_15_4_DIR_PATH}/ieee_802_15_4/phy/source/PhyTime.c",
    "${IEEE_802_15_4_DIR_PATH}/ieee_802_15_4/phy/source/SerialDevice/ASP.c",
    "${IEEE_802_15_4_DIR_PATH}/ieee_802_15_4/phy/source/SerialDevice/Phy.c",

    # Multicore / Rpmsg files
    "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr.c",
    "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr_imu_internal.c",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/common/llist.c",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/porting/environment/rpmsg_env_freertos.c",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/rpmsg_lite.c",
    "${MULTICORE_RPMSG_DIR_PATH}/lib/virtio/virtqueue.c",

    # Secure subsystem directories
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_aes.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_aes_cmac.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_ccm.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_ecdh.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_hmac_sha256.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_init.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/port/kw45_k4w1/sss_sha256.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/src/sscp/fsl_sscp_mu.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/src/sscp/fsl_sss_mgmt.c",
    "${SECURE_SUBSYSTEM_DIR_PATH}/src/sscp/fsl_sss_sscp.c",
  ]

  if (nxp_device == "MCXW716C") {
    middleware_sources += [
      "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr_internal_core_api_mcxw716.c",
      "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr_internal_core_api_mcxw716_ext.c",
      "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/porting/platform/mcxw71x/rpmsg_platform.c",
      "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/porting/platform/mcxw71x/rpmsg_platform_ext.c",
      "${BLE_HOST_DIR_PATH}/application/common/matter/ble_init.c",
    ]
  } else if (nxp_device == "MCXW727C") {
    middleware_sources += [
      "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr_internal_core_api_mcxw727.c",
      "${MULTICORE_DIR_PATH}/mcmgr/src/mcmgr_internal_core_api_mcxw727_ext.c",
      "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/porting/platform/mcxw72x/rpmsg_platform.c",
      "${MULTICORE_RPMSG_DIR_PATH}/lib/rpmsg_lite/porting/platform/mcxw72x/rpmsg_platform_ext.c",
      "${BLE_HOST_DIR_PATH}/application/common/matter/ble_init.c",
    ]
  }

  if (chip_crypto == "platform") {
    middleware_sources += [
      "${FRAMEWORK_SERVICES_DIR_PATH}/SecLib_RNG/SecLib_sss.c",
    ]
  } else if (chip_crypto == "mbedtls") {
    middleware_sources += [
      "${FRAMEWORK_SERVICES_DIR_PATH}/SecLib_RNG/SecLib_mbedTLS.c",
    ]
  }

  if (nxp_nvm_component == "fwk_nvm") {
    middleware_sources += [ "${FRAMEWORK_SERVICES_DIR_PATH}/NVM/Source/NV_Flash.c" ]
  } else if (nxp_nvm_component == "littlefs") {
    middleware_sources += [
      "${LITTLEFS_DIR_PATH}/lfs.c",
      "${LITTLEFS_DIR_PATH}/lfs_util.c",
      "${FRAMEWORK_SERVICES_DIR_PATH}/FSAbstraction/fwk_fs_abstraction.c",
      "${FRAMEWORK_SERVICES_DIR_PATH}/FSAbstraction/fwk_lfs_mflash.c",
      "${FRAMEWORK_SERVICES_DIR_PATH}/FileCache/fwk_file_cache.c",
      "${FRAMEWORK_SERVICES_DIR_PATH}/KeyStorage/fwk_key_storage.c"
    ]
  } else if (nxp_nvm_component == "nvs") {
    middleware_sources += [
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/lib/crc/crc8_sw.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/fs/nvs/nvs.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/src/settings.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/src/settings_init.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/src/settings_store.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/src/settings_nvs.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/subsys/settings/src/settings_runtime.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/nvs/fwk_nvs_flash.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/nvs/fwk_nvs_InternalFlash.c",
      "${FRAMEWORK_ZEPHYR_DIR_PATH}/port/nvs/fwk_nvs_stats.c",
    ]
  }
}
