# Copyright (c) 2024 Project CHIP Authors
# Copyright 2024 NXP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/nxp_sdk.gni")

import("${chip_root}/src/lib/core/core.gni")
import("${chip_root}/src/platform/device.gni")
import("${chip_root}/src/platform/nxp/${nxp_platform}/args.gni")

import("${nxp_sdk_build_root}/nxp_sdk.gni")

assert(nxp_sdk_root != "", "nxp_sdk_root must be specified")

core_sdk = {
  if (nxp_device == "K32W1480") {
    DEVICES_DIR_PATH = "${nxp_sdk_root}/devices/Wireless/K32W/${nxp_device}"
  } else if (nxp_device == "MCXW716C" || nxp_device == "MCXW727C") {
    # Maybe create gn args for SOC portofolio (MCX) and SOC series (MCXW)
    DEVICES_DIR_PATH = "${nxp_sdk_root}/devices/MCX/MCXW/${nxp_device}"
  }

  ADDITIONAL_DRIVERS_DIR_PATH = "${DEVICES_DIR_PATH}/drivers"
  CMSIS_CORE_DIR_PATH = "${nxp_sdk_root}/arch/arm/CMSIS/Core"
  COMPONENT_DIR_PATH = "${nxp_sdk_root}/components"
  DRIVER_DIR_PATH = "${nxp_sdk_root}/drivers"

  DRIVER_CCM32K_DIR_PATH = "${DRIVER_DIR_PATH}/ccm32k"
  DRIVER_CMC_DIR_PATH = "${DRIVER_DIR_PATH}/cmc"
  DRIVER_COMMON_DIR_PATH = "${DRIVER_DIR_PATH}/common"
  DRIVER_CRC_DIR_PATH = "${DRIVER_DIR_PATH}/crc"
  DRIVER_DMA3_DIR_PATH = "${DRIVER_DIR_PATH}/dma3"
  DRIVER_ELEMU_DIR_PATH = "${DRIVER_DIR_PATH}/elemu"
  DRIVER_FLASH_K4_DIR_PATH = "${DRIVER_DIR_PATH}/flash_k4"
  DRIVER_GPIO_DIR_PATH = "${DRIVER_DIR_PATH}/gpio"
  DRIVER_IMU_DIR_PATH = "${DRIVER_DIR_PATH}/imu"
  DRIVER_LPSPI_DIR_PATH = "${DRIVER_DIR_PATH}/lpspi"
  DRIVER_LPTMR_DIR_PATH = "${DRIVER_DIR_PATH}/lptmr"
  DRIVER_LPUART_DIR_PATH = "${DRIVER_DIR_PATH}/lpuart"
  DRIVER_LTC_DIR_PATH = "${DRIVER_DIR_PATH}/ltc"
  DRIVER_MCM_DIR_PATH = "${DRIVER_DIR_PATH}/mcm"
  DRIVER_PORT_DIR_PATH = "${DRIVER_DIR_PATH}/port"
  DRIVER_SPC_DIR_PATH = "${DRIVER_DIR_PATH}/spc"
  DRIVER_TPM_DIR_PATH = "${DRIVER_DIR_PATH}/tpm"
  DRIVER_TRDC_DIR_PATH = "${DRIVER_DIR_PATH}/trdc"
  DRIVER_VBAT_DIR_PATH = "${DRIVER_DIR_PATH}/vbat"
  DRIVER_WUU_DIR_PATH = "${DRIVER_DIR_PATH}/wuu"

  COMPONENT_ASSERT_PATH = "${COMPONENT_DIR_PATH}/assert"
  COMPONENT_BUTTON_DIR_PATH = "${COMPONENT_DIR_PATH}/button"
  COMPONENT_DEBUG_CONSOLE_PATH = "${COMPONENT_DIR_PATH}/debug_console"
  COMPONENT_FLASH_DIR_PATH = "${COMPONENT_DIR_PATH}/flash"
  COMPONENT_GPIO_DIR_PATH = "${COMPONENT_DIR_PATH}/gpio"
  COMPONENT_INTERNAL_FLASH_DIR_PATH = "${COMPONENT_DIR_PATH}/internal_flash"
  COMPONENT_LED_DIR_PATH = "${COMPONENT_DIR_PATH}/led"
  COMPONENT_LISTS_DIR_PATH = "${COMPONENT_DIR_PATH}/lists"
  COMPONENT_MEM_MGR_DIR_PATH = "${COMPONENT_DIR_PATH}/mem_manager"
  COMPONENT_MESSAGING_DIR_PATH = "${COMPONENT_DIR_PATH}/messaging"
  COMPONENT_OSA_DIR_PATH = "${COMPONENT_DIR_PATH}/osa"
  COMPONENT_PANIC_DIR_PATH = "${COMPONENT_DIR_PATH}/panic"
  COMPONENT_POWER_MGR_DIR_PATH = "${COMPONENT_DIR_PATH}/power_manager"
  COMPONENT_PWM_DIR_PATH = "${COMPONENT_DIR_PATH}/pwm"
  COMPONENT_RESET_DIR_PATH = "${COMPONENT_DIR_PATH}/reset"
  COMPONENT_RPMSG_DIR_PATH = "${COMPONENT_DIR_PATH}/rpmsg"
  COMPONENT_SERIAL_MGR_DIR_PATH = "${COMPONENT_DIR_PATH}/serial_manager"
  COMPONENT_STR_PATH = "${COMPONENT_DIR_PATH}/str"
  COMPONENT_TIMER_DIR_PATH = "${COMPONENT_DIR_PATH}/timer"
  COMPONENT_TIMER_MGR_DIR_PATH = "${COMPONENT_DIR_PATH}/timer_manager"
  COMPONENT_TIME_STAMP_DIR_PATH = "${COMPONENT_DIR_PATH}/time_stamp"
  COMPONENT_UART_DIR_PATH = "${COMPONENT_DIR_PATH}/uart"

  core_include_dirs = [
    # CMSIS directories
    "${CMSIS_CORE_DIR_PATH}/Include",

    # Devices directories
    "${ADDITIONAL_DRIVERS_DIR_PATH}",
    "${DEVICES_DIR_PATH}",

    # Drivers directories
    "${DRIVER_CCM32K_DIR_PATH}",
    "${DRIVER_CMC_DIR_PATH}",
    "${DRIVER_COMMON_DIR_PATH}",
    "${DRIVER_CRC_DIR_PATH}",
    "${DRIVER_DMA3_DIR_PATH}",
    "${DRIVER_ELEMU_DIR_PATH}",
    "${DRIVER_FLASH_K4_DIR_PATH}",
    "${DRIVER_GPIO_DIR_PATH}",
    "${DRIVER_IMU_DIR_PATH}",
    "${DRIVER_LPSPI_DIR_PATH}",
    "${DRIVER_LPTMR_DIR_PATH}",
    "${DRIVER_LPUART_DIR_PATH}",
    "${DRIVER_LTC_DIR_PATH}",
    "${DRIVER_MCM_DIR_PATH}",
    "${DRIVER_PORT_DIR_PATH}",
    "${DRIVER_SPC_DIR_PATH}",
    "${DRIVER_TPM_DIR_PATH}",
    "${DRIVER_TRDC_DIR_PATH}",
    "${DRIVER_VBAT_DIR_PATH}",
    "${DRIVER_WUU_DIR_PATH}",

    # Components directories
    "${COMPONENT_ASSERT_PATH}",
    "${COMPONENT_BUTTON_DIR_PATH}",
    "${COMPONENT_DEBUG_CONSOLE_PATH}",
    "${COMPONENT_DEBUG_CONSOLE_PATH}/config",
    "${COMPONENT_FLASH_DIR_PATH}/nor",
    "${COMPONENT_FLASH_DIR_PATH}/nor/lpspi",
    "${COMPONENT_GPIO_DIR_PATH}",
    "${COMPONENT_INTERNAL_FLASH_DIR_PATH}",
    "${COMPONENT_LED_DIR_PATH}",
    "${COMPONENT_LISTS_DIR_PATH}",
    "${COMPONENT_MEM_MGR_DIR_PATH}",
    "${COMPONENT_MESSAGING_DIR_PATH}",
    "${COMPONENT_OSA_DIR_PATH}",
    "${COMPONENT_OSA_DIR_PATH}/config",
    "${COMPONENT_PANIC_DIR_PATH}",
    "${COMPONENT_POWER_MGR_DIR_PATH}/core",
    "${COMPONENT_POWER_MGR_DIR_PATH}/devices/KW45B41Z83",
    "${COMPONENT_RESET_DIR_PATH}",
    "${COMPONENT_RPMSG_DIR_PATH}",
    "${COMPONENT_SERIAL_MGR_DIR_PATH}",
    "${COMPONENT_STR_PATH}",
    "${COMPONENT_TIMER_DIR_PATH}",
    "${COMPONENT_TIMER_MGR_DIR_PATH}",
    "${COMPONENT_TIME_STAMP_DIR_PATH}",
    "${COMPONENT_UART_DIR_PATH}",
  ]

  if (nxp_device == "MCXW727C") {
    core_include_dirs += [
      "${nxp_sdk_root}/core/devices/MCXW727C/drivers/",
      "${COMPONENT_POWER_MGR_DIR_PATH}/devices/KW47B42ZB7/",
      "${DRIVER_TRDC_DIR_PATH}",
      "${DEVICES_DIR_PATH}/../periph3",
    ]
  } else if (nxp_device == "MCXW716C")  {
    core_include_dirs += [
      "${DEVICES_DIR_PATH}/../periph2",
    ]
  } else if (nxp_device == "K32W1480") {
    core_include_dirs += [
      "${DEVICES_DIR_PATH}/../periph1",
    ]
  }

  if (nxp_nvm_component != "fwk_nvm") {
    core_include_dirs += [
      "${COMPONENT_FLASH_DIR_PATH}/mflash",
      "${COMPONENT_FLASH_DIR_PATH}/mflash/k32w1"
    ]
  }

  core_defines = [
    "__STARTUP_CLEAR_BSS",
    "SERIAL_MANAGER_NON_BLOCKING_MODE=1",
    "SERIAL_USE_CONFIGURE_STRUCTURE=1",
    "SDK_OS_FREE_RTOS",
    "HAL_RPMSG_SELECT_ROLE=0",
    "TM_ENABLE_TIME_STAMP=1",
    "FSL_OSA_TASK_ENABLE=1",
    "FSL_OSA_MAIN_FUNC_ENABLE=1",
    "FSL_OSA_ALLOCATED_HEAP=0",

    "BUTTON_SHORT_PRESS_THRESHOLD=1500",
    "BUTTON_LONG_PRESS_THRESHOLD=2500",
    "SDK_DEBUGCONSOLE=1",
    "USE_RTOS=1",
    "FSL_RTOS_FREE_RTOS=1",
    "gMemManagerLightExtendHeapAreaUsage=0",
    "ENABLE_RAM_VECTOR_TABLE=1",

    "NO_SYSCORECLK_UPD=0",
    "USE_SDK_OSA=0",
    "DEBUG_SERIAL_INTERFACE_INSTANCE=0",
    "gLoggingActive_d=0",
    "gLogRingPlacementOffset_c=0xF000",
  ]

  if (nxp_device == "K32W1480") {
    core_defines += [ "CPU_K32W1480VFTA" ]
  } else if (nxp_device == "MCXW716C") {
    core_defines += [
      "CPU_MCXW716CMFTA",
      "K32W1480_SERIES"
    ]
  } else if (nxp_device == "MCXW727C") {
    core_defines += [
      "CPU_MCXW727CMFTA_cm33_core0",
    ]
    if (chip_logging || nxp_enable_matter_cli) {
      core_defines += [
        "gDebugConsoleEnable_d=1",
        "DEBUG_CONSOLE_TRANSFER_NON_BLOCKING",
        "DebugConsole_c=1",
        "DEFAULT_APP_UART=0",
      ]
    }
  }

  if (nxp_enable_matter_cli && nxp_device != "MCXW727C") {
    core_defines += [
      "gDebugConsoleEnable_d=1",
      "DebugConsole_c=0",
      "DEFAULT_APP_UART=0",
      "BOARD_APP_UART_CLK_FREQ=6000000U",
    ]
  }

  if (nxp_device == "MCXW727C") {
    core_defines += [
      # For now, allocate more heap for kw47
      "MinimalHeapSize_c=0xC000",
    ]
  } else {
    core_defines += [
      "MinimalHeapSize_c=0x8A00",
    ]
  }

  if (nxp_device == "MCXW727C") {
    core_sources = [
      # Devices files
      # Use this startup file for now. Will switch to an SDK startup file in the future.
      "${nxp_sdk_matter_support_root}/examples/platform/mcxw72/app/startup.S",
      "${DEVICES_DIR_PATH}/system_${nxp_device}_cm33_core0.c",
      "${ADDITIONAL_DRIVERS_DIR_PATH}/fsl_clock.c",
      "${COMPONENT_POWER_MGR_DIR_PATH}/devices/KW47B42ZB7/fsl_pm_device.c",
      # Drivers
    ]
  } else {
    core_sources = [
      # Devices files
      "${DEVICES_DIR_PATH}/gcc/startup_${nxp_device}.S",
      "${DEVICES_DIR_PATH}/system_${nxp_device}.c",
      "${ADDITIONAL_DRIVERS_DIR_PATH}/fsl_clock.c",
      "${COMPONENT_POWER_MGR_DIR_PATH}/devices/KW45B41Z83/fsl_pm_device.c",
    ]
  }

  core_sources += [
    # Drivers files
    "${DRIVER_CCM32K_DIR_PATH}/fsl_ccm32k.c",
    "${DRIVER_CMC_DIR_PATH}/fsl_cmc.c",
    "${DRIVER_CRC_DIR_PATH}/fsl_crc.c",
    "${DRIVER_ELEMU_DIR_PATH}/fsl_elemu.c",
    "${DRIVER_FLASH_K4_DIR_PATH}/fsl_k4_controller.c",
    "${DRIVER_FLASH_K4_DIR_PATH}/fsl_k4_flash.c",
    "${DRIVER_GPIO_DIR_PATH}/fsl_gpio.c",
    "${DRIVER_IMU_DIR_PATH}/fsl_imu.c",
    "${DRIVER_LPSPI_DIR_PATH}/fsl_lpspi.c",
    "${DRIVER_LPTMR_DIR_PATH}/fsl_lptmr.c",
    "${DRIVER_LPUART_DIR_PATH}/fsl_lpuart.c",
    "${DRIVER_LTC_DIR_PATH}/fsl_ltc.c",
    "${DRIVER_TRDC_DIR_PATH}/fsl_trdc.c",
    "${DRIVER_SPC_DIR_PATH}/fsl_spc.c",
    "${DRIVER_VBAT_DIR_PATH}/fsl_vbat.c",
    "${DRIVER_WUU_DIR_PATH}/fsl_wuu.c",

    # Components files
    "${COMPONENT_ASSERT_PATH}/fsl_assert.c",
    "${COMPONENT_BUTTON_DIR_PATH}/fsl_component_button.c",
    "${COMPONENT_DEBUG_CONSOLE_PATH}/fsl_debug_console.c",
    "${COMPONENT_DIR_PATH}/rpmsg/fsl_adapter_rpmsg.c",
    "${COMPONENT_FLASH_DIR_PATH}/nor/lpspi/fsl_lpspi_mem_adapter.c",
    "${COMPONENT_FLASH_DIR_PATH}/nor/lpspi/fsl_lpspi_nor_flash.c",
    "${COMPONENT_GPIO_DIR_PATH}/fsl_adapter_gpio.c",
    "${COMPONENT_INTERNAL_FLASH_DIR_PATH}/fsl_adapter_k4_flash.c",
    "${COMPONENT_LED_DIR_PATH}/fsl_component_led.c",
    "${COMPONENT_LISTS_DIR_PATH}/fsl_component_generic_list.c",
    "${COMPONENT_MEM_MGR_DIR_PATH}/fsl_component_mem_manager_light.c",
    "${COMPONENT_MESSAGING_DIR_PATH}/fsl_component_messaging.c",
    "${COMPONENT_OSA_DIR_PATH}/fsl_os_abstraction_free_rtos.c",
    "${COMPONENT_PANIC_DIR_PATH}/fsl_component_panic.c",
    "${COMPONENT_POWER_MGR_DIR_PATH}/core/fsl_pm_core.c",
    "${COMPONENT_RESET_DIR_PATH}/fsl_adapter_reset.c",
    "${COMPONENT_SERIAL_MGR_DIR_PATH}/fsl_component_serial_manager.c",
    "${COMPONENT_SERIAL_MGR_DIR_PATH}/fsl_component_serial_port_uart.c",
    "${COMPONENT_STR_PATH}/fsl_str.c",
    "${COMPONENT_TIMER_DIR_PATH}/fsl_adapter_lptmr.c",
    "${COMPONENT_TIMER_MGR_DIR_PATH}/fsl_component_timer_manager.c",
    "${COMPONENT_TIME_STAMP_DIR_PATH}/fsl_adapter_lptmr_time_stamp.c",
    "${COMPONENT_UART_DIR_PATH}/fsl_adapter_lpuart.c",
  ]

  if (nxp_nvm_component != "fwk_nvm") {
    core_sources += [
      "${COMPONENT_FLASH_DIR_PATH}/mflash/k32w1/mflash_drv.c"
    ]
  }
}
