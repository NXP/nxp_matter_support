# Copyright (c) 2022 Project CHIP Authors
# Copyright 2023-2025 NXP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/nxp_sdk.gni")

#allows to get common NXP SDK gn options
import("${nxp_sdk_build_root}/nxp_sdk.gni")

# Allows to get various RT gn options
import("${nxp_sdk_build_root}/${nxp_sdk_name}/${nxp_sdk_name}.gni")

import("${nxp_sdk_build_root}/mbedtls/mbedtls.gni")

rt_mbedtls_root = "${nxp_sdk_root}/middleware/mbedtls"

config("mbedtls_ksdk_config") {
  include_dirs = [ 
    "${rt_mbedtls_root}/port/ksdk",
    "${nxp_sdk_build_root}/mbedtls/config",
  ]
  defines = [ 
    "MBEDTLS_PORT_INCLUDE=<ksdk_mbedtls.h>",
    "MBEDTLS_CONFIG_FILE=<ksdk_mbedtls_config.h>",
    "MBEDTLS_USER_CONFIG_FILE=<nxp_matter_mbedtls_config.h>",
  ]
}

mbedtls_target("nxp_ksdk_mbedtls") {
  sources = []
  public_deps = [ nxp_sdk_driver_target ]
  public_configs = [ ":mbedtls_ksdk_config" ]
  sources += [
    "${rt_mbedtls_root}/port/ksdk/aes_alt.c",
    "${rt_mbedtls_root}/port/ksdk/des_alt.c",
    "${rt_mbedtls_root}/port/ksdk/ecp_alt.c",
    "${rt_mbedtls_root}/port/ksdk/ecp_alt_ksdk.c",
    "${rt_mbedtls_root}/port/ksdk/ecp_curves_alt.c",
    "${rt_mbedtls_root}/port/ksdk/ksdk_mbedtls.c",
  ]

  # Allow a platform to use a software implementation of ksdk_mbedtls.c if provided
  if (defined(ksdk_mbedtls_sw_impl)) {
    sources -= [ "${rt_mbedtls_root}/port/ksdk/ksdk_mbedtls.c" ]
    sources += [ "${ksdk_mbedtls_sw_impl}" ]
  }

  if (chip_enable_openthread) {
    public_deps += [ "${openthread_root}/src/core:libopenthread_core_headers" ]
  }
}

group("nxp_mbedtls") {
  public_deps = [ ":nxp_ksdk_mbedtls" ]
}

group("nxp_sdk_mbedtls_config") {
  public_configs = [ ":mbedtls_ksdk_config" ]
}


source_set("nxp_sdk_mbedtls_dep") {
  # Add here SDK source files which have a dependency on mbedtls
  # this approach helps avoid circular dependencies between mbedtls and rw61x_sdk_drivers targets
  sources = [
    "${nxp_sdk_root}/middleware/wireless/framework/services/FactoryDataProvider/fwk_factory_data_provider.c",
  ]

  deps = [
    nxp_sdk_driver_target,
    "${nxp_sdk_build_root}/${nxp_sdk_name}/${rt_platform}:nxp_sdk_mbedtls_config",
    "${nxp_sdk_build_root}/${nxp_sdk_name}/${rt_platform}:nxp_mbedtls",
  ]
}

group("nxp_sdk") {
  # Add SDK's source set which depends on mbedtls
  public_deps = [ ":nxp_sdk_mbedtls_dep" ]
}
